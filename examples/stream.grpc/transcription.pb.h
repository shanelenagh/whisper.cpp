// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transcription.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_transcription_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_transcription_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_transcription_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_transcription_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_transcription_2eproto;
namespace sigper {
namespace transcription {
class AudioSegmentRequest;
struct AudioSegmentRequestDefaultTypeInternal;
extern AudioSegmentRequestDefaultTypeInternal _AudioSegmentRequest_default_instance_;
class TranscriptResponse;
struct TranscriptResponseDefaultTypeInternal;
extern TranscriptResponseDefaultTypeInternal _TranscriptResponse_default_instance_;
}  // namespace transcription
}  // namespace sigper
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace sigper {
namespace transcription {

// ===================================================================


// -------------------------------------------------------------------

class TranscriptResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sigper.transcription.TranscriptResponse) */ {
 public:
  inline TranscriptResponse() : TranscriptResponse(nullptr) {}
  ~TranscriptResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TranscriptResponse(::google::protobuf::internal::ConstantInitialized);

  inline TranscriptResponse(const TranscriptResponse& from)
      : TranscriptResponse(nullptr, from) {}
  TranscriptResponse(TranscriptResponse&& from) noexcept
    : TranscriptResponse() {
    *this = ::std::move(from);
  }

  inline TranscriptResponse& operator=(const TranscriptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TranscriptResponse& operator=(TranscriptResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TranscriptResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TranscriptResponse* internal_default_instance() {
    return reinterpret_cast<const TranscriptResponse*>(
               &_TranscriptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TranscriptResponse& a, TranscriptResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TranscriptResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TranscriptResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TranscriptResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TranscriptResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TranscriptResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TranscriptResponse& from) {
    TranscriptResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TranscriptResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sigper.transcription.TranscriptResponse";
  }
  protected:
  explicit TranscriptResponse(::google::protobuf::Arena* arena);
  TranscriptResponse(::google::protobuf::Arena* arena, const TranscriptResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTranscriptionFieldNumber = 1,
    kStartTimeFieldNumber = 3,
    kEndTimeFieldNumber = 4,
    kSeqNumFieldNumber = 2,
  };
  // string transcription = 1;
  void clear_transcription() ;
  const std::string& transcription() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transcription(Arg_&& arg, Args_... args);
  std::string* mutable_transcription();
  PROTOBUF_NODISCARD std::string* release_transcription();
  void set_allocated_transcription(std::string* value);

  private:
  const std::string& _internal_transcription() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_transcription(
      const std::string& value);
  std::string* _internal_mutable_transcription();

  public:
  // .google.protobuf.Timestamp start_time = 3;
  bool has_start_time() const;
  void clear_start_time() ;
  const ::google::protobuf::Timestamp& start_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_start_time();
  ::google::protobuf::Timestamp* mutable_start_time();
  void set_allocated_start_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_start_time();

  private:
  const ::google::protobuf::Timestamp& _internal_start_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_start_time();

  public:
  // .google.protobuf.Timestamp end_time = 4;
  bool has_end_time() const;
  void clear_end_time() ;
  const ::google::protobuf::Timestamp& end_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_end_time();
  ::google::protobuf::Timestamp* mutable_end_time();
  void set_allocated_end_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_end_time();

  private:
  const ::google::protobuf::Timestamp& _internal_end_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_end_time();

  public:
  // int32 seq_num = 2;
  void clear_seq_num() ;
  ::int32_t seq_num() const;
  void set_seq_num(::int32_t value);

  private:
  ::int32_t _internal_seq_num() const;
  void _internal_set_seq_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:sigper.transcription.TranscriptResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      61, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr transcription_;
    ::google::protobuf::Timestamp* start_time_;
    ::google::protobuf::Timestamp* end_time_;
    ::int32_t seq_num_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transcription_2eproto;
};// -------------------------------------------------------------------

class AudioSegmentRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sigper.transcription.AudioSegmentRequest) */ {
 public:
  inline AudioSegmentRequest() : AudioSegmentRequest(nullptr) {}
  ~AudioSegmentRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AudioSegmentRequest(::google::protobuf::internal::ConstantInitialized);

  inline AudioSegmentRequest(const AudioSegmentRequest& from)
      : AudioSegmentRequest(nullptr, from) {}
  AudioSegmentRequest(AudioSegmentRequest&& from) noexcept
    : AudioSegmentRequest() {
    *this = ::std::move(from);
  }

  inline AudioSegmentRequest& operator=(const AudioSegmentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AudioSegmentRequest& operator=(AudioSegmentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AudioSegmentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AudioSegmentRequest* internal_default_instance() {
    return reinterpret_cast<const AudioSegmentRequest*>(
               &_AudioSegmentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AudioSegmentRequest& a, AudioSegmentRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AudioSegmentRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AudioSegmentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AudioSegmentRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AudioSegmentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AudioSegmentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AudioSegmentRequest& from) {
    AudioSegmentRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AudioSegmentRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "sigper.transcription.AudioSegmentRequest";
  }
  protected:
  explicit AudioSegmentRequest(::google::protobuf::Arena* arena);
  AudioSegmentRequest(::google::protobuf::Arena* arena, const AudioSegmentRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAudioDataFieldNumber = 1,
    kSendTimeFieldNumber = 2,
  };
  // bytes audio_data = 1;
  void clear_audio_data() ;
  const std::string& audio_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_audio_data(Arg_&& arg, Args_... args);
  std::string* mutable_audio_data();
  PROTOBUF_NODISCARD std::string* release_audio_data();
  void set_allocated_audio_data(std::string* value);

  private:
  const std::string& _internal_audio_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_audio_data(
      const std::string& value);
  std::string* _internal_mutable_audio_data();

  public:
  // .google.protobuf.Timestamp send_time = 2;
  bool has_send_time() const;
  void clear_send_time() ;
  const ::google::protobuf::Timestamp& send_time() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_send_time();
  ::google::protobuf::Timestamp* mutable_send_time();
  void set_allocated_send_time(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_send_time(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_send_time();

  private:
  const ::google::protobuf::Timestamp& _internal_send_time() const;
  ::google::protobuf::Timestamp* _internal_mutable_send_time();

  public:
  // @@protoc_insertion_point(class_scope:sigper.transcription.AudioSegmentRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr audio_data_;
    ::google::protobuf::Timestamp* send_time_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_transcription_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AudioSegmentRequest

// bytes audio_data = 1;
inline void AudioSegmentRequest::clear_audio_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.audio_data_.ClearToEmpty();
}
inline const std::string& AudioSegmentRequest::audio_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sigper.transcription.AudioSegmentRequest.audio_data)
  return _internal_audio_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AudioSegmentRequest::set_audio_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.audio_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sigper.transcription.AudioSegmentRequest.audio_data)
}
inline std::string* AudioSegmentRequest::mutable_audio_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_audio_data();
  // @@protoc_insertion_point(field_mutable:sigper.transcription.AudioSegmentRequest.audio_data)
  return _s;
}
inline const std::string& AudioSegmentRequest::_internal_audio_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.audio_data_.Get();
}
inline void AudioSegmentRequest::_internal_set_audio_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.audio_data_.Set(value, GetArena());
}
inline std::string* AudioSegmentRequest::_internal_mutable_audio_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.audio_data_.Mutable( GetArena());
}
inline std::string* AudioSegmentRequest::release_audio_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sigper.transcription.AudioSegmentRequest.audio_data)
  return _impl_.audio_data_.Release();
}
inline void AudioSegmentRequest::set_allocated_audio_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.audio_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.audio_data_.IsDefault()) {
          _impl_.audio_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sigper.transcription.AudioSegmentRequest.audio_data)
}

// .google.protobuf.Timestamp send_time = 2;
inline bool AudioSegmentRequest::has_send_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.send_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& AudioSegmentRequest::_internal_send_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.send_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& AudioSegmentRequest::send_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sigper.transcription.AudioSegmentRequest.send_time)
  return _internal_send_time();
}
inline void AudioSegmentRequest::unsafe_arena_set_allocated_send_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.send_time_);
  }
  _impl_.send_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sigper.transcription.AudioSegmentRequest.send_time)
}
inline ::google::protobuf::Timestamp* AudioSegmentRequest::release_send_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.send_time_;
  _impl_.send_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* AudioSegmentRequest::unsafe_arena_release_send_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sigper.transcription.AudioSegmentRequest.send_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.send_time_;
  _impl_.send_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* AudioSegmentRequest::_internal_mutable_send_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.send_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.send_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.send_time_;
}
inline ::google::protobuf::Timestamp* AudioSegmentRequest::mutable_send_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_send_time();
  // @@protoc_insertion_point(field_mutable:sigper.transcription.AudioSegmentRequest.send_time)
  return _msg;
}
inline void AudioSegmentRequest::set_allocated_send_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.send_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.send_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:sigper.transcription.AudioSegmentRequest.send_time)
}

// -------------------------------------------------------------------

// TranscriptResponse

// string transcription = 1;
inline void TranscriptResponse::clear_transcription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transcription_.ClearToEmpty();
}
inline const std::string& TranscriptResponse::transcription() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sigper.transcription.TranscriptResponse.transcription)
  return _internal_transcription();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TranscriptResponse::set_transcription(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transcription_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:sigper.transcription.TranscriptResponse.transcription)
}
inline std::string* TranscriptResponse::mutable_transcription() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transcription();
  // @@protoc_insertion_point(field_mutable:sigper.transcription.TranscriptResponse.transcription)
  return _s;
}
inline const std::string& TranscriptResponse::_internal_transcription() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.transcription_.Get();
}
inline void TranscriptResponse::_internal_set_transcription(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.transcription_.Set(value, GetArena());
}
inline std::string* TranscriptResponse::_internal_mutable_transcription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.transcription_.Mutable( GetArena());
}
inline std::string* TranscriptResponse::release_transcription() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sigper.transcription.TranscriptResponse.transcription)
  return _impl_.transcription_.Release();
}
inline void TranscriptResponse::set_allocated_transcription(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.transcription_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.transcription_.IsDefault()) {
          _impl_.transcription_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:sigper.transcription.TranscriptResponse.transcription)
}

// int32 seq_num = 2;
inline void TranscriptResponse::clear_seq_num() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.seq_num_ = 0;
}
inline ::int32_t TranscriptResponse::seq_num() const {
  // @@protoc_insertion_point(field_get:sigper.transcription.TranscriptResponse.seq_num)
  return _internal_seq_num();
}
inline void TranscriptResponse::set_seq_num(::int32_t value) {
  _internal_set_seq_num(value);
  // @@protoc_insertion_point(field_set:sigper.transcription.TranscriptResponse.seq_num)
}
inline ::int32_t TranscriptResponse::_internal_seq_num() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.seq_num_;
}
inline void TranscriptResponse::_internal_set_seq_num(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.seq_num_ = value;
}

// .google.protobuf.Timestamp start_time = 3;
inline bool TranscriptResponse::has_start_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.start_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TranscriptResponse::_internal_start_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.start_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TranscriptResponse::start_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sigper.transcription.TranscriptResponse.start_time)
  return _internal_start_time();
}
inline void TranscriptResponse::unsafe_arena_set_allocated_start_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }
  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sigper.transcription.TranscriptResponse.start_time)
}
inline ::google::protobuf::Timestamp* TranscriptResponse::release_start_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* TranscriptResponse::unsafe_arena_release_start_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sigper.transcription.TranscriptResponse.start_time)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.start_time_;
  _impl_.start_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TranscriptResponse::_internal_mutable_start_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.start_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.start_time_;
}
inline ::google::protobuf::Timestamp* TranscriptResponse::mutable_start_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_start_time();
  // @@protoc_insertion_point(field_mutable:sigper.transcription.TranscriptResponse.start_time)
  return _msg;
}
inline void TranscriptResponse::set_allocated_start_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.start_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.start_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:sigper.transcription.TranscriptResponse.start_time)
}

// .google.protobuf.Timestamp end_time = 4;
inline bool TranscriptResponse::has_end_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.end_time_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TranscriptResponse::_internal_end_time() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.end_time_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TranscriptResponse::end_time() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:sigper.transcription.TranscriptResponse.end_time)
  return _internal_end_time();
}
inline void TranscriptResponse::unsafe_arena_set_allocated_end_time(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }
  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:sigper.transcription.TranscriptResponse.end_time)
}
inline ::google::protobuf::Timestamp* TranscriptResponse::release_end_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* TranscriptResponse::unsafe_arena_release_end_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:sigper.transcription.TranscriptResponse.end_time)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.end_time_;
  _impl_.end_time_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TranscriptResponse::_internal_mutable_end_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.end_time_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.end_time_;
}
inline ::google::protobuf::Timestamp* TranscriptResponse::mutable_end_time() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_end_time();
  // @@protoc_insertion_point(field_mutable:sigper.transcription.TranscriptResponse.end_time)
  return _msg;
}
inline void TranscriptResponse::set_allocated_end_time(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.end_time_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.end_time_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:sigper.transcription.TranscriptResponse.end_time)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace transcription
}  // namespace sigper


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_transcription_2eproto_2epb_2eh
