// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transcription.proto

#include "transcription.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sigper {
namespace transcription {

inline constexpr TranscriptResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        transcription_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        start_time_{nullptr},
        end_time_{nullptr},
        seq_num_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TranscriptResponse::TranscriptResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TranscriptResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TranscriptResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TranscriptResponseDefaultTypeInternal() {}
  union {
    TranscriptResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TranscriptResponseDefaultTypeInternal _TranscriptResponse_default_instance_;

inline constexpr AudioSegmentRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        audio_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        send_time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AudioSegmentRequest::AudioSegmentRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AudioSegmentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioSegmentRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioSegmentRequestDefaultTypeInternal() {}
  union {
    AudioSegmentRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioSegmentRequestDefaultTypeInternal _AudioSegmentRequest_default_instance_;
}  // namespace transcription
}  // namespace sigper
static ::_pb::Metadata file_level_metadata_transcription_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_transcription_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_transcription_2eproto = nullptr;
const ::uint32_t TableStruct_transcription_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::AudioSegmentRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::AudioSegmentRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::AudioSegmentRequest, _impl_.audio_data_),
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::AudioSegmentRequest, _impl_.send_time_),
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::TranscriptResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::TranscriptResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::TranscriptResponse, _impl_.transcription_),
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::TranscriptResponse, _impl_.seq_num_),
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::TranscriptResponse, _impl_.start_time_),
    PROTOBUF_FIELD_OFFSET(::sigper::transcription::TranscriptResponse, _impl_.end_time_),
    ~0u,
    ~0u,
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::sigper::transcription::AudioSegmentRequest)},
        {12, 24, -1, sizeof(::sigper::transcription::TranscriptResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::sigper::transcription::_AudioSegmentRequest_default_instance_._instance,
    &::sigper::transcription::_TranscriptResponse_default_instance_._instance,
};
const char descriptor_table_protodef_transcription_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023transcription.proto\022\024sigper.transcript"
    "ion\032\037google/protobuf/timestamp.proto\"X\n\023"
    "AudioSegmentRequest\022\022\n\naudio_data\030\001 \001(\014\022"
    "-\n\tsend_time\030\002 \001(\0132\032.google.protobuf.Tim"
    "estamp\"\232\001\n\022TranscriptResponse\022\025\n\rtranscr"
    "iption\030\001 \001(\t\022\017\n\007seq_num\030\002 \001(\005\022.\n\nstart_t"
    "ime\030\003 \001(\0132\032.google.protobuf.Timestamp\022,\n"
    "\010end_time\030\004 \001(\0132\032.google.protobuf.Timest"
    "amp2\202\001\n\022AudioTranscription\022l\n\017Transcribe"
    "Audio\022).sigper.transcription.AudioSegmen"
    "tRequest\032(.sigper.transcription.Transcri"
    "ptResponse\"\000(\0010\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_transcription_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_transcription_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_transcription_2eproto = {
    false,
    false,
    464,
    descriptor_table_protodef_transcription_2eproto,
    "transcription.proto",
    &descriptor_table_transcription_2eproto_once,
    descriptor_table_transcription_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_transcription_2eproto::offsets,
    file_level_metadata_transcription_2eproto,
    file_level_enum_descriptors_transcription_2eproto,
    file_level_service_descriptors_transcription_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_transcription_2eproto_getter() {
  return &descriptor_table_transcription_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_transcription_2eproto(&descriptor_table_transcription_2eproto);
namespace sigper {
namespace transcription {
// ===================================================================

class AudioSegmentRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<AudioSegmentRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AudioSegmentRequest, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& send_time(const AudioSegmentRequest* msg);
  static void set_has_send_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& AudioSegmentRequest::_Internal::send_time(const AudioSegmentRequest* msg) {
  return *msg->_impl_.send_time_;
}
void AudioSegmentRequest::clear_send_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.send_time_ != nullptr) _impl_.send_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
AudioSegmentRequest::AudioSegmentRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sigper.transcription.AudioSegmentRequest)
}
inline PROTOBUF_NDEBUG_INLINE AudioSegmentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        audio_data_(arena, from.audio_data_) {}

AudioSegmentRequest::AudioSegmentRequest(
    ::google::protobuf::Arena* arena,
    const AudioSegmentRequest& from)
    : ::google::protobuf::Message(arena) {
  AudioSegmentRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.send_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.send_time_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sigper.transcription.AudioSegmentRequest)
}
inline PROTOBUF_NDEBUG_INLINE AudioSegmentRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        audio_data_(arena) {}

inline void AudioSegmentRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.send_time_ = {};
}
AudioSegmentRequest::~AudioSegmentRequest() {
  // @@protoc_insertion_point(destructor:sigper.transcription.AudioSegmentRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AudioSegmentRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.audio_data_.Destroy();
  delete _impl_.send_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AudioSegmentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sigper.transcription.AudioSegmentRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.audio_data_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.send_time_ != nullptr);
    _impl_.send_time_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AudioSegmentRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AudioSegmentRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AudioSegmentRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AudioSegmentRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp send_time = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AudioSegmentRequest, _impl_.send_time_)}},
    // bytes audio_data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AudioSegmentRequest, _impl_.audio_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes audio_data = 1;
    {PROTOBUF_FIELD_OFFSET(AudioSegmentRequest, _impl_.audio_data_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp send_time = 2;
    {PROTOBUF_FIELD_OFFSET(AudioSegmentRequest, _impl_.send_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* AudioSegmentRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sigper.transcription.AudioSegmentRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes audio_data = 1;
  if (!this->_internal_audio_data().empty()) {
    const std::string& _s = this->_internal_audio_data();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp send_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::send_time(this),
        _Internal::send_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sigper.transcription.AudioSegmentRequest)
  return target;
}

::size_t AudioSegmentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sigper.transcription.AudioSegmentRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (!this->_internal_audio_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_audio_data());
  }

  // .google.protobuf.Timestamp send_time = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.send_time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AudioSegmentRequest::_class_data_ = {
    AudioSegmentRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AudioSegmentRequest::GetClassData() const {
  return &_class_data_;
}

void AudioSegmentRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AudioSegmentRequest*>(&to_msg);
  auto& from = static_cast<const AudioSegmentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sigper.transcription.AudioSegmentRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_audio_data().empty()) {
    _this->_internal_set_audio_data(from._internal_audio_data());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_send_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_send_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AudioSegmentRequest::CopyFrom(const AudioSegmentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sigper.transcription.AudioSegmentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AudioSegmentRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AudioSegmentRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AudioSegmentRequest::InternalSwap(AudioSegmentRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.audio_data_, &other->_impl_.audio_data_, arena);
  swap(_impl_.send_time_, other->_impl_.send_time_);
}

::google::protobuf::Metadata AudioSegmentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transcription_2eproto_getter, &descriptor_table_transcription_2eproto_once,
      file_level_metadata_transcription_2eproto[0]);
}
// ===================================================================

class TranscriptResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<TranscriptResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& start_time(const TranscriptResponse* msg);
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::Timestamp& end_time(const TranscriptResponse* msg);
  static void set_has_end_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::google::protobuf::Timestamp& TranscriptResponse::_Internal::start_time(const TranscriptResponse* msg) {
  return *msg->_impl_.start_time_;
}
const ::google::protobuf::Timestamp& TranscriptResponse::_Internal::end_time(const TranscriptResponse* msg) {
  return *msg->_impl_.end_time_;
}
void TranscriptResponse::clear_start_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.start_time_ != nullptr) _impl_.start_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void TranscriptResponse::clear_end_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.end_time_ != nullptr) _impl_.end_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
TranscriptResponse::TranscriptResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sigper.transcription.TranscriptResponse)
}
inline PROTOBUF_NDEBUG_INLINE TranscriptResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        transcription_(arena, from.transcription_) {}

TranscriptResponse::TranscriptResponse(
    ::google::protobuf::Arena* arena,
    const TranscriptResponse& from)
    : ::google::protobuf::Message(arena) {
  TranscriptResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.start_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.start_time_)
                : nullptr;
  _impl_.end_time_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.end_time_)
                : nullptr;
  _impl_.seq_num_ = from._impl_.seq_num_;

  // @@protoc_insertion_point(copy_constructor:sigper.transcription.TranscriptResponse)
}
inline PROTOBUF_NDEBUG_INLINE TranscriptResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        transcription_(arena) {}

inline void TranscriptResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, start_time_),
           0,
           offsetof(Impl_, seq_num_) -
               offsetof(Impl_, start_time_) +
               sizeof(Impl_::seq_num_));
}
TranscriptResponse::~TranscriptResponse() {
  // @@protoc_insertion_point(destructor:sigper.transcription.TranscriptResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TranscriptResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.transcription_.Destroy();
  delete _impl_.start_time_;
  delete _impl_.end_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TranscriptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sigper.transcription.TranscriptResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transcription_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.start_time_ != nullptr);
      _impl_.start_time_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.end_time_ != nullptr);
      _impl_.end_time_->Clear();
    }
  }
  _impl_.seq_num_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TranscriptResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 61, 2> TranscriptResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TranscriptResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp end_time = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.end_time_)}},
    // string transcription = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.transcription_)}},
    // int32 seq_num = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TranscriptResponse, _impl_.seq_num_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.seq_num_)}},
    // .google.protobuf.Timestamp start_time = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.start_time_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string transcription = 1;
    {PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.transcription_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 seq_num = 2;
    {PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.seq_num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .google.protobuf.Timestamp start_time = 3;
    {PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.start_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.Timestamp end_time = 4;
    {PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.end_time_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\47\15\0\0\0\0\0\0"
    "sigper.transcription.TranscriptResponse"
    "transcription"
  }},
};

::uint8_t* TranscriptResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sigper.transcription.TranscriptResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string transcription = 1;
  if (!this->_internal_transcription().empty()) {
    const std::string& _s = this->_internal_transcription();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sigper.transcription.TranscriptResponse.transcription");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 seq_num = 2;
  if (this->_internal_seq_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_seq_num(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp start_time = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::start_time(this),
        _Internal::start_time(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp end_time = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::end_time(this),
        _Internal::end_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sigper.transcription.TranscriptResponse)
  return target;
}

::size_t TranscriptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sigper.transcription.TranscriptResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transcription = 1;
  if (!this->_internal_transcription().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_transcription());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .google.protobuf.Timestamp start_time = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.start_time_);
    }

    // .google.protobuf.Timestamp end_time = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.end_time_);
    }

  }
  // int32 seq_num = 2;
  if (this->_internal_seq_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_seq_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TranscriptResponse::_class_data_ = {
    TranscriptResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TranscriptResponse::GetClassData() const {
  return &_class_data_;
}

void TranscriptResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TranscriptResponse*>(&to_msg);
  auto& from = static_cast<const TranscriptResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sigper.transcription.TranscriptResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transcription().empty()) {
    _this->_internal_set_transcription(from._internal_transcription());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_start_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_start_time());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_end_time()->::google::protobuf::Timestamp::MergeFrom(
          from._internal_end_time());
    }
  }
  if (from._internal_seq_num() != 0) {
    _this->_internal_set_seq_num(from._internal_seq_num());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TranscriptResponse::CopyFrom(const TranscriptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sigper.transcription.TranscriptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TranscriptResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TranscriptResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TranscriptResponse::InternalSwap(TranscriptResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transcription_, &other->_impl_.transcription_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.seq_num_)
      + sizeof(TranscriptResponse::_impl_.seq_num_)
      - PROTOBUF_FIELD_OFFSET(TranscriptResponse, _impl_.start_time_)>(
          reinterpret_cast<char*>(&_impl_.start_time_),
          reinterpret_cast<char*>(&other->_impl_.start_time_));
}

::google::protobuf::Metadata TranscriptResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_transcription_2eproto_getter, &descriptor_table_transcription_2eproto_once,
      file_level_metadata_transcription_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace transcription
}  // namespace sigper
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
